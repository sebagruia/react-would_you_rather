{"version":3,"sources":["utils/images/logo.png","utils/avatars/tylermcginnis.png","utils/avatars/sarahedo.png","utils/avatars/johndoe.png","DATA/_DATA.js","redux/actions/questions/saveAnswerAction.js","redux/actions/users/logAction.js","redux/actions/users/setLoginUserAction.js","redux/reducers/users/usersReducer.js","redux/actions/questions/receiveAllQuestionsAction.js","redux/reducers/questions/questionsReducer.js","redux/root-reducer.js","redux/actions/users/receiveUsersAction.js","redux/actions/questions/addQuestionAction.js","redux/actions/questions/setOptionOneText.Action.js","redux/actions/questions/setOptionTwoText.Action.js","redux/middleware/logger.js","redux/store.js","component/LogIn.js","component/Navigation.js","component/UserStats.js","component/Leaderboard.js","utils/utils.js","component/Poll.js","component/PollResults.js","component/CreateQuestion.js","component/Question.js","component/CategorizedQuestions.js","component/NoMatch404.js","container/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","users","sarahedo","id","name","avatarURL","sarahAvatar","answers","questions","tylermcginnis","tylerAvatar","johndoe","johnAvatar","author","timestamp","optionOne","votes","text","optionTwo","_saveQuestion","question","Promise","res","rej","authedUser","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","setTimeout","concat","saveAnswerAction","answerObject","dispatch","qid","answer","_saveQuestionAnswer","then","type","payload","logAction","boolean","setLoginUserAction","initialStateUsers","logIn","loginField","receiveAllQuestionsAction","showLoading","hideLoading","initialQuestionState","rootReducer","combineReducers","usersReducer","state","action","questionsReducer","loadingBar","loadingBarReducer","logger","store","next","console","group","log","returnValue","getState","groupEnd","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunkMiddleware","connect","ownProps","onLoginChange","event","preventDefault","target","value","onSubmitUser","props","Card","className","Title","Body","Img","variant","src","logo","Form","onSubmit","Control","onChange","as","defaultValue","Object","values","map","user","key","Button","block","userName","avatarUrl","Navbar","bg","expand","Brand","width","height","alt","Toggle","aria-controls","Collapse","Nav","exact","to","activeClassName","onClick","UserStats","numberOfQuestionsAnswered","keys","length","numberOfQuestionsCreated","score","Leaderbord","sortedUSers","sort","a","b","getLoggedUserId","getLoggedUserAvatarUrl","getQuestionOfUser","filter","withRouter","loggedUserName","useState","inputValue","setInputValue","questionId","match","params","question_id","getQuestionUser","handleInputChange","history","push","Check","label","reRenderedQuestion","renderedQuestion","questionOptionOneVotes","questionOptionTwoVotes","percentageOptionOne","round","percentageOptionTwo","style","role","aria-valuenow","aria-valuemin","aria-valuemax","isNaN","redirect","setRedirect","Header","Group","controlId","placeholder","answered","firstLink","setActivFirstLink","secondLink","setActivSecondLink","handleClick","selectUser","answeredQuestions","includes","unansweredQuestions","defaultActiveKey","Item","Link","NoMatch404","location","useLocation","pathname","App","this","retreiveUsers","retreiveQuestions","userId","path","Component","Boolean","hostname","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6d63c7b6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2056c12c.png\";","module.exports = __webpack_public_path__ + \"static/media/tylermcginnis.8366a16c.png\";","module.exports = __webpack_public_path__ + \"static/media/sarahedo.b5af26a6.png\";","module.exports = __webpack_public_path__ + \"static/media/johndoe.50d048d7.png\";","import tylerAvatar from \"../utils/avatars/tylermcginnis.png\";\nimport sarahAvatar from \"../utils/avatars/sarahedo.png\";\nimport johnAvatar from \"../utils/avatars/johndoe.png\";\n\nlet users = {\n  sarahedo: {\n    id: 'sarahedo',\n    name: 'Sarah Edo',\n    avatarURL:{name:sarahAvatar} ,\n    answers: {\n      \"8xf0y6ziyjabvozdd253nd\": 'optionOne',\n      \"6ni6ok3ym7mf1p33lnez\": 'optionTwo',\n      \"am8ehyc8byjqgar0jgpub9\": 'optionTwo',\n      \"loxhs1bqm25b708cmbf3g\": 'optionTwo'\n    },\n    questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9']\n  },\n  tylermcginnis: {\n    id: 'tylermcginnis',\n    name: 'Tyler McGinnis',\n    avatarURL:{name:tylerAvatar} ,\n    answers: {\n      \"vthrdm985a262al8qx3do\": 'optionOne',\n      \"xj352vofupe1dqz9emx13r\": 'optionTwo',\n    },\n    questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\n  },\n  johndoe: {\n    id: 'johndoe',\n    name: 'John Doe',\n    avatarURL:{name:johnAvatar},\n    answers: {\n      \"xj352vofupe1dqz9emx13r\": 'optionOne',\n      \"vthrdm985a262al8qx3do\": 'optionTwo',\n      \"6ni6ok3ym7mf1p33lnez\": 'optionTwo'\n    },\n    questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\n  }\n}\n\nlet questions = {\n  \"8xf0y6ziyjabvozdd253nd\": {\n    id: '8xf0y6ziyjabvozdd253nd',\n    author: 'sarahedo',\n    timestamp: 1467166872634,\n    optionOne: {\n      votes: ['sarahedo'],\n      text: 'have horrible short term memory',\n    },\n    optionTwo: {\n      votes: [],\n      text: 'have horrible long term memory'\n    }\n  },\n  \"6ni6ok3ym7mf1p33lnez\": {\n    id: '6ni6ok3ym7mf1p33lnez',\n    author: 'johndoe',\n    timestamp: 1468479767190,\n    optionOne: {\n      votes: [],\n      text: 'become a superhero',\n    },\n    optionTwo: {\n      votes: ['johndoe', 'sarahedo'],\n      text: 'become a supervillain'\n    }\n  },\n  \"am8ehyc8byjqgar0jgpub9\": {\n    id: 'am8ehyc8byjqgar0jgpub9',\n    author: 'sarahedo',\n    timestamp: 1488579767190,\n    optionOne: {\n      votes: [],\n      text: 'be telekinetic',\n    },\n    optionTwo: {\n      votes: ['sarahedo'],\n      text: 'be telepathic'\n    }\n  },\n  \"loxhs1bqm25b708cmbf3g\": {\n    id: 'loxhs1bqm25b708cmbf3g',\n    author: 'tylermcginnis',\n    timestamp: 1482579767190,\n    optionOne: {\n      votes: [],\n      text: 'be a front-end developer',\n    },\n    optionTwo: {\n      votes: ['sarahedo'],\n      text: 'be a back-end developer'\n    }\n  },\n  \"vthrdm985a262al8qx3do\": {\n    id: 'vthrdm985a262al8qx3do',\n    author: 'tylermcginnis',\n    timestamp: 1489579767190,\n    optionOne: {\n      votes: ['tylermcginnis'],\n      text: 'find $50 yourself',\n    },\n    optionTwo: {\n      votes: ['johndoe'],\n      text: 'have your best friend find $500'\n    }\n  },\n  \"xj352vofupe1dqz9emx13r\": {\n    id: 'xj352vofupe1dqz9emx13r',\n    author: 'johndoe',\n    timestamp: 1493579767190,\n    optionOne: {\n      votes: ['johndoe'],\n      text: 'write JavaScript',\n    },\n    optionTwo: {\n      votes: ['tylermcginnis'],\n      text: 'write Swift'\n    }\n  },\n}\n\nfunction generateUID () {\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\n}\n\nexport function _getUsers () {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({...users}), 1000)\n  })\n}\n\nexport function _getQuestions () {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({...questions}), 1000)\n  })\n}\n\nfunction formatQuestion ({ optionOneText, optionTwoText, author }) {\n  return {\n    id: generateUID(),\n    timestamp: Date.now(),\n    author,\n    optionOne: {\n      votes: [],\n      text: optionOneText,\n    },\n    optionTwo: {\n      votes: [],\n      text: optionTwoText,\n    }\n  }\n}\n\nexport function _saveQuestion (question) {\n  return new Promise((res, rej) => {\n    const authedUser = question.author;\n    const formattedQuestion = formatQuestion(question);\n\n    setTimeout(() => {\n      questions = {\n        ...questions,\n        [formattedQuestion.id]: formattedQuestion\n      }\n      \n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          questions: users[authedUser].questions.concat([formattedQuestion.id])\n        }\n      }\n\n      res(formattedQuestion)\n    }, 1000)\n  })\n}\n\nexport function _saveQuestionAnswer ({ authedUser, qid, answer }) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          answers: {\n            ...users[authedUser].answers,\n            [qid]: answer\n          }\n        }\n      }\n\n      questions = {\n        ...questions,\n        [qid]: {\n          ...questions[qid],\n          [answer]: {\n            ...questions[qid][answer],\n            votes: questions[qid][answer].votes.concat([authedUser])\n          }\n        }\n      }\n\n      res()\n    }, 500)\n  })\n}\n","import {_saveQuestionAnswer} from '../../../DATA/_DATA';\r\nexport const SAVE_ANSWER = \"SAVE_ANSWER\";\r\n\r\nexport const saveAnswerAction = (answerObject)=>(dispatch)=>{\r\n    _saveQuestionAnswer(answerObject)\r\n    .then(()=>{\r\n        dispatch({\r\n            type:SAVE_ANSWER,\r\n            payload:answerObject\r\n        });\r\n\r\n    });\r\n\r\n};","export const LOGED_IN_OR_OUT = \"LOGED_IN_OR_OUT\";\r\n\r\nexport const logAction = boolean => {\r\n  return {\r\n    type: LOGED_IN_OR_OUT,\r\n    payload: boolean\r\n  };\r\n};\r\n","export const SET_LOGIN_USER = 'SET_LOGIN_USER';\r\n\r\nexport const setLoginUserAction = text =>({\r\n    type:SET_LOGIN_USER,\r\n    payload:text\r\n});\r\n ","import { RECEIVE_USERS } from \"../../actions/users/receiveUsersAction\";\r\nimport { ADD_QUESTION } from \"../../actions/questions/addQuestionAction\";\r\nimport { SAVE_ANSWER } from \"../../actions/questions/saveAnswerAction\";\r\nimport { LOGED_IN_OR_OUT } from \"../../actions/users/logAction\";\r\nimport { SET_LOGIN_USER } from \"../../actions/users/setLoginUserAction\";\r\n\r\nconst initialStateUsers = {\r\n  users: {},\r\n  logIn: false,\r\n  loginField: \"\",\r\n};\r\n\r\nexport const usersReducer = (state = initialStateUsers, action = {}) => {\r\n  switch (action.type) {\r\n    case RECEIVE_USERS:\r\n      return { ...state, users: action.payload };\r\n    case ADD_QUESTION:\r\n      const formattedQuestion = action.payload;\r\n      return {\r\n        ...state,\r\n        users: {\r\n          ...state.users,\r\n          [formattedQuestion.author]: {\r\n            ...state.users[formattedQuestion.author],\r\n            questions: state.users[formattedQuestion.author].questions.concat([\r\n              formattedQuestion.id,\r\n            ]),\r\n          },\r\n        },\r\n      };\r\n    case SAVE_ANSWER:\r\n      const authedUser = action.payload.authedUser;\r\n      const qid = action.payload.qid;\r\n      return {\r\n        ...state,\r\n        users: {\r\n          ...state.users,\r\n          [authedUser]: {\r\n            ...state.users[authedUser],\r\n            answers: {\r\n              ...state.users[authedUser].answers,\r\n              [qid]: action.payload.answer,\r\n            },\r\n          },\r\n        },\r\n      };\r\n    case SET_LOGIN_USER:\r\n      return { ...state, loginField: action.payload };\r\n    case LOGED_IN_OR_OUT:\r\n      return { ...state, logIn: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {_getQuestions} from '../../../DATA/_DATA';\r\nimport {showLoading, hideLoading} from 'react-redux-loading';\r\nexport const RECEIVE_ALL_QUESTIONS = 'RECEIVE_ALL_QUESTIONS';\r\n\r\n\r\n\r\nexport const receiveAllQuestionsAction = ()=>(dispatch)=>{\r\n    dispatch(showLoading());\r\n   return _getQuestions()\r\n   .then((questions)=>{\r\n        dispatch({\r\n            type:RECEIVE_ALL_QUESTIONS,\r\n            payload:questions\r\n        });\r\n    dispatch(hideLoading());\r\n   })\r\n\r\n}","import { RECEIVE_ALL_QUESTIONS } from \"../../actions/questions/receiveAllQuestionsAction\";\r\nimport { ADD_QUESTION } from \"../../actions/questions/addQuestionAction\";\r\nimport { SAVE_ANSWER } from \"../../actions/questions/saveAnswerAction\";\r\nimport { SET_OPTION_ONE_TEXT } from \"../../actions/questions/setOptionOneText.Action\";\r\nimport { SET_OPTION_TWO_TEXT } from \"../../actions/questions/setOptionTwoText.Action\";\r\n\r\nconst initialQuestionState = {\r\n  questions: {},\r\n  optionOneText:\"\",\r\n  optionTwoText:\"\"\r\n\r\n};\r\n\r\nexport const questionsReducer = (state = initialQuestionState, action = {}) => {\r\n  switch (action.type) {\r\n    case RECEIVE_ALL_QUESTIONS:\r\n      return { ...state, questions: action.payload };\r\n    case ADD_QUESTION:\r\n      return {\r\n        ...state,\r\n        questions: { ...state.questions, [action.payload.id]: action.payload },\r\n      };\r\n    case SAVE_ANSWER:\r\n      const qid = action.payload.qid;\r\n      const answer = action.payload.answer;\r\n      return {\r\n        ...state,\r\n        questions: {\r\n          ...state.questions,\r\n          [qid]: {\r\n            ...state.questions[qid],\r\n            [answer]: {\r\n              ...state.questions[qid][answer],\r\n              votes: state.questions[qid][answer].votes.concat([\r\n                action.payload.authedUser,\r\n              ]),\r\n            },\r\n          },\r\n        },\r\n      };\r\n      case SET_OPTION_ONE_TEXT:\r\n      return {\r\n        ...state,\r\n        optionOneText:action.payload\r\n      };\r\n    case SET_OPTION_TWO_TEXT:\r\n      return {\r\n        ...state,\r\n        optionTwoText:action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {combineReducers } from \"redux\";\r\n\r\nimport { usersReducer } from \"./reducers/users/usersReducer\";\r\nimport { questionsReducer } from \"./reducers/questions/questionsReducer\";\r\nimport { loadingBarReducer } from 'react-redux-loading-bar';\r\n\r\nexport const rootReducer = combineReducers({\r\n    usersReducer,\r\n    questionsReducer,\r\n    loadingBar: loadingBarReducer\r\n  });\r\n\r\n  export default rootReducer;","import { _getUsers } from '../../../DATA/_DATA';\r\nimport {showLoading, hideLoading} from 'react-redux-loading';\r\nexport const RECEIVE_USERS = \"RECEIVE_USERS\";\r\n\r\nexport const receiveUsersAction = () => async dispatch => {\r\n  dispatch(showLoading());\r\n  const users = await _getUsers();\r\n  dispatch({\r\n    type: RECEIVE_USERS,\r\n    payload: users\r\n  });\r\n  dispatch(hideLoading());\r\n};\r\n\r\n","import  {_saveQuestion} from  '../../../DATA/_DATA';\r\nexport const ADD_QUESTION = \"ADD_QUESTION\";\r\n\r\n\r\nexport const addQuestion = (question)=>(dispatch)=>{\r\n    return _saveQuestion(question)\r\n    .then((formattedQuestion)=>{\r\n        dispatch({\r\n            type:ADD_QUESTION,\r\n            payload:formattedQuestion\r\n        })\r\n    })\r\n\r\n}","export const SET_OPTION_ONE_TEXT = \"SET_OPTION_ONE_TEXT\";\r\n\r\nexport const setOptionOne = (string) => ({\r\n  type: SET_OPTION_ONE_TEXT,\r\n  payload: string,\r\n});\r\n","export const SET_OPTION_TWO_TEXT = \"SET_OPTION_TWO_TEXT\";\r\n\r\nexport const setOptionTwo = (string) => ({\r\n  type: SET_OPTION_TWO_TEXT,\r\n  payload: string,\r\n});\r\n","\r\nconst logger = store=>next=>action=>{\r\n    console.group(action.type);\r\n        console.log('This action: ', action);\r\n        const returnValue = next(action);\r\n        console.log('The New STATE: ', store.getState())\r\n    console.groupEnd();\r\n    return returnValue;\r\n}\r\n\r\nexport default logger;","import rootReducer from \"./root-reducer\";\r\nimport { createStore,applyMiddleware, compose } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport logger from \"./middleware/logger\";\r\n\r\n//The code below is just for enabling Chrome Redux DEvTools=============\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n//The \"store\" const bellow has the composeEnhancers function as parameter because I wanted to use Chrome Redux DEvTools, the app works without it just fine\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunkMiddleware, logger))\r\n);\r\n\r\nexport default store;","import React, { Fragment } from \"react\";\r\nimport logo from \"../utils/images/logo.png\";\r\nimport { connect } from \"react-redux\";\r\nimport { setLoginUserAction } from \"../redux/actions/users/setLoginUserAction\";\r\nimport { logAction } from \"../redux/actions/users/logAction\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\n\r\n\r\nconst LogIn = (props)=> {\r\n\r\n    const { users, onLoginChange, onSubmitUser, loginField } = props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Card className=\"logIn-form m-auto\">\r\n          <Card.Title className=\"card-title\">\r\n            <h5>Welcome to the Would You Rather App!</h5>\r\n            <h6>Please log in to continue</h6>\r\n          </Card.Title>\r\n          <Card.Body>\r\n            <Card.Img className=\"logo-img-container\" variant=\"top\" src={logo} />\r\n            <Form\r\n              className=\"submit-form\"\r\n              onSubmit={\r\n                loginField !== \"Select User\" && loginField !== \"\"\r\n                  ? onSubmitUser\r\n                  : null\r\n              }\r\n            >\r\n              <Form.Control\r\n                className=\"select-user\"\r\n                onChange={onLoginChange}\r\n                as=\"select\"\r\n              >\r\n                <option defaultValue>Select User</option>\r\n                {Object.values(users).map((user) => (\r\n                  <option key={user.id} value={user.name}>\r\n                    {user.name}\r\n                  </option>\r\n                ))}\r\n              </Form.Control>\r\n              <Button type=\"submit\" block variant=\"primary\">\r\n                Log In\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </Fragment>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loginField: state.usersReducer.loginField,\r\n    logIn: state.usersReducer.logIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    // The user is selected using the \"setLoginUserAction\" action\r\n    onLoginChange: (event) => {\r\n      event.preventDefault();\r\n      if (event.target.value !== \"Select User\" && event.target.value !== \"\") {\r\n        dispatch(setLoginUserAction(event.target.value));\r\n      }\r\n    },\r\n    //On submiting the form the \"loginField\" value is set to \"True\"\r\n    onSubmitUser: (event) => {\r\n      event.preventDefault();\r\n      dispatch(logAction(true));\r\n    },\r\n  };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LogIn);\r\n","import React from \"react\";\r\nimport logo from \"../utils/images/logo.png\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport { connect } from \"react-redux\";\r\nimport { logAction } from \"../redux/actions/users/logAction\";\r\nimport { setLoginUserAction } from \"../redux/actions/users/setLoginUserAction\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navigation = props => {\r\n  const { userName, avatarUrl, dispatch } = props;\r\n\r\n  const onClick = () => {\r\n    dispatch(logAction(false));\r\n    dispatch(setLoginUserAction(\"\"));\r\n  };\r\n\r\n  return (\r\n    <Navbar bg=\"light\" expand=\"lg\">\r\n      <div className=\"container\">\r\n\r\n        <Navbar.Brand>\r\n          <img\r\n            src={logo}\r\n            className=\"d-inline-block align-top logo-image\"\r\n            width=\"30\"\r\n            height=\"30\"\r\n            alt=\"app logo\"\r\n          />\r\n          Would You Rather?\r\n        </Navbar.Brand>\r\n\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"ml-auto\">\r\n            <NavLink exact to=\"/\" activeClassName=\"selected\">\r\n              <i className=\"fas fa-home\"></i>\r\n              Home\r\n            </NavLink>\r\n            <NavLink  to=\"/leaderbord\" activeClassName=\"selected\">\r\n              <i className=\"fas fa-medal\"></i>\r\n              Leaderboard\r\n            </NavLink>\r\n            <NavLink to=\"/add\" activeClassName=\"selected\">\r\n              <i className=\"fas fa-plus-circle\"></i>\r\n              Add question\r\n            </NavLink>\r\n            <NavLink  to=\"/\" >\r\n              <div className=\"nav-link-img-container\">\r\n              <img className=\"user-avatar\" src={avatarUrl} alt=\"user avatar\" />\r\n             <p>Hello, {userName}</p> \r\n              </div>\r\n            </NavLink >\r\n            <NavLink  to=\"/\"  onClick={onClick}>\r\n              <i className=\"fas fa-minus-circle\"></i>\r\n              LogOut\r\n            </NavLink>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </div>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default connect()(Navigation);\r\n","import React from \"react\";\r\n\r\nconst UserStats = ({user}) => {\r\n    const numberOfQuestionsAnswered = Object.keys(user.answers).length;\r\n    const numberOfQuestionsCreated = Object.keys(user.questions).length;\r\n    const score = numberOfQuestionsAnswered + numberOfQuestionsCreated;\r\n    \r\n  return (\r\n    <div className=\"userStats-container\">\r\n      <div className=\"userStats-avatar\">\r\n        <img src={user.avatarURL.name} alt=\"avatar\" />\r\n      </div>\r\n      <div className=\"userStats-statistic\">\r\n        <div className=\"userStats-statistic-text\">\r\n          <h5>{user.name}</h5>\r\n          <div className=\"answered-questions\">\r\n            <div>\r\n              <h6>Answered questions</h6>\r\n            </div>\r\n            <div>\r\n              <h6>{numberOfQuestionsAnswered}</h6>\r\n            </div>\r\n          </div>\r\n          <div className=\"created-questions\">\r\n            <div>\r\n              <h6>Created questions</h6>\r\n            </div>\r\n            <div>\r\n              <h6>{numberOfQuestionsCreated}</h6>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"userStats-score\">\r\n        <div className=\"userStats-score-text\">\r\n          <h6>Score</h6>\r\n        </div>\r\n        <div className=\"userStats-score-number\">\r\n          <p>{score}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserStats;\r\n","import React from \"react\";\r\nimport UserStats from \"../component/UserStats\";\r\n\r\nconst Leaderbord = props => {\r\n  const { users } = props;\r\n  // The user array is sorted according to the SUM of \"answered questions+created questions\" in the descending order\r\n  const sortedUSers = Object.values(users).sort((a,b)=>{\r\n    return (Object.keys(b.answers).length + b.questions.length) -  (Object.keys(a.answers).length + a.questions.length); \r\n  });\r\n  return (\r\n    <div className=\"leaderboard\">\r\n      {sortedUSers.map(user => {\r\n        return <UserStats key={user.id} user={user} />\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Leaderbord;\r\n","\r\nexport const getLoggedUserId = (users, userName)=>{\r\n    for (let user of Object.values(users)) {\r\n        if (user.name === userName) {\r\n          return user.id;\r\n        }\r\n      }\r\n\r\n}\r\n\r\nexport const getLoggedUserAvatarUrl = (users, userName) => {\r\n  for (let user of Object.values(users)) {\r\n    if (user.name === userName) {\r\n      return user.avatarURL.name;\r\n    }\r\n  }\r\n};\r\n\r\nexport const getQuestionOfUser = (users, question)=>{\r\n  return Object.values(users).filter(\r\n    (user) => user.id === question.author\r\n  )\r\n  \r\n};\r\n","import React, { useState, Fragment } from \"react\";\r\nimport { withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport { saveAnswerAction } from \"../redux/actions/questions/saveAnswerAction\";\r\nimport {getLoggedUserId, getQuestionOfUser} from \"../utils/utils\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Poll = (props) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const { dispatch, users, loggedUserName, questions  } = props;\r\n  const authedUser = getLoggedUserId(users, loggedUserName);\r\n  \r\n  const questionId = props.match.params.question_id;\r\n  const question = Object.values(questions).filter(question=>question.id === questionId);\r\n\r\n// In case of entering a wrong URL to question, this is returned:\r\n  if(question.length === 0){\r\n    return  (<div className=\"error-page\">\r\n              <h3>No Such Question</h3>\r\n              <h6>Please Try going {<NavLink to=\"/\"> HOME</NavLink>}</h6>\r\n            </div>)\r\n  }\r\n // ==============================================================\r\n\r\n  const getQuestionUser = getQuestionOfUser(users, question[0]);\r\n\r\n  const redirectToPollResults = (event) => {\r\n    event.preventDefault();\r\n    if (inputValue) {\r\n      dispatch(\r\n        saveAnswerAction({ authedUser, qid: questionId, answer: inputValue })\r\n      );\r\n        props.history.push(`/pollresults/${questionId}`)\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setInputValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"user poll\">\r\n          <div className=\"user-name\">\r\n            <h5>{getQuestionUser[0].name} asks:</h5>\r\n          </div>\r\n          <div className=\"user-info-container-poll\">\r\n            <div className=\"image-container poll-image-container align-middle\">\r\n              <img src={getQuestionUser[0].avatarURL.name} alt=\"avatar\" />\r\n            </div>\r\n\r\n            <Form\r\n              onSubmit={redirectToPollResults}\r\n              className=\"question-container\"\r\n            >\r\n              <h5>Would you rather...</h5>\r\n              <div className=\"poll-first-question-container\">\r\n                <div className=\"input-container\">\r\n                  <Form.Check\r\n                    onChange={handleInputChange}\r\n                    type=\"radio\"\r\n                    label={question[0].optionOne.text}\r\n                    name=\"selection\"\r\n                    id=\"first-question-checkbox\"\r\n                    value=\"optionOne\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"poll-second-question-container\">\r\n                <div className=\"input-container\">\r\n                  <Form.Check\r\n                    onChange={handleInputChange}\r\n                    type=\"radio\"\r\n                    label={question[0].optionTwo.text}\r\n                    name=\"selection\"\r\n                    id=\"second-question-checkbox\"\r\n                    value=\"optionTwo\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"outline-info\"\r\n                className=\"view-poll-button btn-block\"\r\n              >\r\n                Vote\r\n            </Button>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n  </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state)=>({\r\n  users:state.usersReducer.users,\r\n  loggedUserName:state.usersReducer.loginField,\r\n  questions: state.questionsReducer.questions,\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps)(Poll)); //withRouter component from react-router-dom lets you acces the props passed via the Redirect component\r\n","import React, { Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter, NavLink } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {getLoggedUserId, getQuestionOfUser} from \"../utils/utils\";\r\n\r\nconst PollResults = (props) => {\r\n\r\n  const { users,loggedUserName, questions } = props;\r\n  const questionId = props.match.params.question_id;\r\n  const question = Object.values(questions).filter(question=>question.id === questionId);\r\n  const authedUser = getLoggedUserId(users,loggedUserName)\r\n\r\n  // In case of entering a wrong URL to pollResults, this is returned:\r\n  if(question.length === 0){\r\n    return  (<div className=\"error-page\">\r\n              <h3>No Such Poll Results</h3>\r\n              <h6>Please Try going {<NavLink to=\"/\"> HOME</NavLink>}</h6>\r\n            </div>)\r\n  }\r\n // ==============================================================\r\n\r\n const getQuestionUser = getQuestionOfUser(users, question[0]);\r\n\r\n  // I'm geting the question from store with the updated results\r\n  const reRenderedQuestion = Object.values(questions).filter(renderedQuestion => renderedQuestion.id === questionId);\r\n  const questionOptionOneVotes = reRenderedQuestion[0].optionOne.votes.length;\r\n  const questionOptionTwoVotes = reRenderedQuestion[0].optionTwo.votes.length;\r\n\r\n  const answer = users[authedUser].answers[questionId];\r\n  \r\n  // Calculation of votes for optionOne and optionTwo in percentages\r\n  const percentageOptionOne = Math.round((questionOptionOneVotes / (questionOptionOneVotes + questionOptionTwoVotes)) * 100);\r\n  const percentageOptionTwo = Math.round((questionOptionTwoVotes / (questionOptionOneVotes + questionOptionTwoVotes)) * 100);\r\n\r\n\r\n  const handleOnClick = () => {\r\n    props.history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n          <div className=\"user poll\">\r\n            <div className=\"user-name\">\r\n              <h5>Asked by {getQuestionUser[0].name}</h5>\r\n            </div>\r\n            <div className=\"pollresults-container-poll\">\r\n              <div className=\"pollresults-image-container\">\r\n                <img src={getQuestionUser[0].avatarURL.name} alt=\"avatar\" />\r\n              </div>\r\n              <div className=\"pollresults\">\r\n                <h5 className=\"pollresults-title\">Results:</h5>\r\n                <div className={`pollresults-container ${answer === 'optionOne' ? 'select' : null}`}>\r\n                  <div className=\"pollresults-question\">\r\n                    <h6>{`${question[0].optionOne.text}?`}</h6>\r\n                    <h6 className={`voted-container ${answer === 'optionOne' ? \"\" : \"hidden\"}`}><span className=\"badge badge-warning voted\">Voted</span></h6>\r\n                  </div>\r\n                  <div className=\"progress\" style={{ height: \"20px\" }}>\r\n                    <div\r\n                      className=\"progress-bar\"\r\n                      role=\"progressbar\"\r\n                      style={{\r\n                        width: `${percentageOptionOne}%`\r\n                      }}\r\n                      aria-valuenow=\"25\"\r\n                      aria-valuemin=\"0\"\r\n                      aria-valuemax=\"100\"\r\n                    >\r\n                      {isNaN(percentageOptionOne) ? \"0\" : percentageOptionOne}%\r\n                </div>\r\n                  </div>\r\n                  <div className=\"votes\">\r\n                    <h6>{`${questionOptionOneVotes} out of ${questionOptionOneVotes + questionOptionTwoVotes} votes`}</h6>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className={`pollresults-container ${answer === 'optionTwo' ? 'select' : null}`}>\r\n                  <div className=\"pollresults-question\">\r\n                    <h6>{`${question[0].optionTwo.text}?`}</h6>\r\n                    <h6 className={`voted-container ${answer === 'optionTwo' ? \"\" : \"hidden\"}`}><span className=\"badge badge-warning voted\">Voted</span></h6>\r\n                  </div>\r\n                  <div className=\"progress\" style={{ height: \"20px\" }}>\r\n                    <div\r\n                      className=\"progress-bar\"\r\n                      role=\"progressbar\"\r\n                      style={{ width: `${percentageOptionTwo}%` }}\r\n                      aria-valuenow=\"35\"\r\n                      aria-valuemin=\"0\"\r\n                      aria-valuemax=\"100\"\r\n                    >\r\n                      {isNaN(percentageOptionTwo) ? \"0\" : percentageOptionTwo}%\r\n                </div>\r\n                  </div>\r\n                  <div className=\"votes\">\r\n                    <h6>{`${questionOptionTwoVotes} out of ${questionOptionOneVotes + questionOptionTwoVotes} votes`}</h6>\r\n                  </div>\r\n                </div>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"outline-info\"\r\n                  className=\"view-poll-button btn-block\"\r\n                  onClick={handleOnClick}\r\n                >\r\n                  Back\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  users: state.usersReducer.users,\r\n  loggedUserName:state.usersReducer.loginField,\r\n  questions: state.questionsReducer.questions\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps)(PollResults));\r\n","import React from \"react\";\r\nimport { Fragment, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addQuestion } from \"../redux/actions/questions/addQuestionAction\";\r\nimport { setOptionOne } from \"../redux/actions/questions/setOptionOneText.Action\";\r\nimport { setOptionTwo } from \"../redux/actions/questions/setOptionTwoText.Action\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst CreateQuestion = (props) => {\r\n  const { dispatch, author, optionOneText, optionTwoText } = props;\r\n\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  const getOptionOneText = (text) => {\r\n    dispatch(setOptionOne(text));\r\n  };\r\n  const getOptionTwoText = (text) => {\r\n    dispatch(setOptionTwo(text));\r\n  };\r\n\r\n  const redirectForm = () => {\r\n    setRedirect(true);\r\n  };\r\n\r\n  // When the \"Submit\" button is clicked the new created question is added to the \"fake\" database using the \"addQuestion\" action\r\n  const onSubmitNewQuestion = (event) => {\r\n    event.preventDefault();\r\n    if (optionOneText !== \"\" && optionTwoText !== \"\") {\r\n      dispatch(addQuestion({ optionOneText, optionTwoText, author }));\r\n      redirectForm();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {redirect ? (\r\n        <Redirect to=\"/\" />\r\n      ) : (\r\n        <Card className=\"createQuestion\">\r\n          <Card.Header>\r\n            <h3>Add a New Question</h3>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form\r\n              onSubmit={onSubmitNewQuestion}\r\n              className=\"submit-form createQuestion-form\"\r\n            >\r\n              <h6>Complete the question</h6>\r\n              <h5>Would you rather...</h5>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Control\r\n                  onChange={(event) => getOptionOneText(event.target.value)}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Question One Here\"\r\n                />\r\n              </Form.Group>\r\n              <hr></hr>\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Control\r\n                  onChange={(event) => getOptionTwoText(event.target.value)}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Question Two One Here\"\r\n                />\r\n              </Form.Group>\r\n              <Button type=\"submit\" block variant=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    optionOneText: state.questionsReducer.optionOneText,\r\n    optionTwoText: state.questionsReducer.optionTwoText,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CreateQuestion);\r\n","import React, {Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {getQuestionOfUser} from \"../utils/utils\";\r\n\r\nconst Question = (props) => {\r\n  const { users, question, answered } = props;\r\n\r\n  const getQuestionUser = getQuestionOfUser(users, question);\r\n\r\n  const redirectToPoll = (event) => {\r\n    event.preventDefault();\r\n    if(!answered){\r\n      props.history.push(`/questions/${question.id}`);\r\n    }\r\n    else{\r\n      props.history.push(`/pollresults/${question.id}`);\r\n    }\r\n    \r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n        <div className=\"user\">\r\n          <div className=\"user-name\">\r\n            <h5>{getQuestionUser[0].name} asks:</h5>\r\n          </div>\r\n\r\n          <div className=\"user-info-container\">\r\n            <div className=\"image-container align-middle\">\r\n              <img src={getQuestionUser[0].avatarURL.name} alt=\"avatar\" />\r\n            </div>\r\n            <div className=\"question-container\">\r\n              <h5>Would you rather</h5>\r\n              <p>{question.optionOne.text}</p>\r\n              <Button\r\n                onClick={redirectToPoll}\r\n                variant=\"outline-info\"\r\n                className=\"view-poll-button btn-block\"\r\n              >\r\n                {answered ? \"View Poll\" : \"Submit\"}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state)=>({\r\n  users:state.usersReducer.users\r\n})\r\n\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps)(Question));\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Question from \"../component/Question\";\r\n\r\nconst CategorizedQuestions = (props) => {\r\n  const { users, questions, userName } = props;\r\n\r\n  const [firstLink, setActivFirstLink] = useState(\"active\");\r\n  const [secondLink, setActivSecondLink] = useState(\"\");\r\n\r\n  const handleClick = () => {\r\n    if (firstLink === \"active\") {\r\n      setActivFirstLink(\"\");\r\n      setActivSecondLink(\"active\");\r\n    } else {\r\n      setActivFirstLink(\"active\");\r\n      setActivSecondLink(\"\");\r\n    }\r\n  };\r\n\r\n  const selectUser = Object.values(users).filter(\r\n    (user) => user.name === userName\r\n  );\r\n  \r\n  // Questions are put in 2 categories: \"answeredQuestions\" and \"unansweredQuestions\" and are sorted in descending order\r\n  const answeredQuestions = Object.values(questions)\r\n    .filter(\r\n      (question) =>\r\n        question.optionOne.votes.includes(selectUser[0].id) ||\r\n        question.optionTwo.votes.includes(selectUser[0].id)\r\n    )\r\n    .sort((a, b) => {\r\n      return b.timestamp - a.timestamp;\r\n    });\r\n\r\n  const unansweredQuestions = Object.values(questions)\r\n    .filter(\r\n      (question) =>\r\n        !question.optionOne.votes.includes(selectUser[0].id) &&\r\n        !question.optionTwo.votes.includes(selectUser[0].id)\r\n    )\r\n    .sort((a, b) => {\r\n      return b.timestamp - a.timestamp;\r\n    });\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card className=\"home\">\r\n        <Card.Header>\r\n          <Nav\r\n            variant=\"tabs\"\r\n            defaultActiveKey=\"#unanswered-questions\"\r\n            className=\"home-links-container\"\r\n          >\r\n            <Nav.Item>\r\n              <Nav.Link\r\n                onClick={handleClick}\r\n                className={`nav-link ${firstLink}`}\r\n              >\r\n                Unanswered Questions\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n              <Nav.Link\r\n                onClick={handleClick}\r\n                className={`nav-link ${secondLink}`}\r\n              >\r\n                Answered Questions\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          {firstLink === \"active\"\r\n            ? unansweredQuestions.map((question) => (\r\n                <Question key={question.id} question={question} />\r\n              ))\r\n            : secondLink === \"active\"\r\n            ? answeredQuestions.map((question) => (\r\n                <Question\r\n                  key={question.id}\r\n                  question={question}\r\n                  answered={true}\r\n                />\r\n              ))\r\n            : null}\r\n        </Card.Body>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  users: state.usersReducer.users,\r\n  questions: state.questionsReducer.questions,\r\n  userName: state.usersReducer.loginField,\r\n});\r\n\r\nexport default connect(mapStateToProps)(CategorizedQuestions);\r\n","import React from \"react\";\r\nimport { useLocation, NavLink } from \"react-router-dom\";\r\n\r\nconst NoMatch404 = () => {\r\n  let location = useLocation();\r\n  return (\r\n    <div className=\"error-page\">\r\n      <h3>\r\n        No Match for <code>{location.pathname}</code>\r\n        \r\n      </h3>\r\n      <h6>Please Try going {<NavLink to=\"/\"> HOME</NavLink>}</h6>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoMatch404;\r\n","import React, { Component, Fragment } from \"react\";\nimport \"./App.css\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\n\nimport LoadingBar from \"react-redux-loading-bar\";\nimport { connect } from \"react-redux\";\nimport { receiveUsersAction } from \"../../redux/actions/users/receiveUsersAction\";\nimport { receiveAllQuestionsAction } from \"../../redux/actions/questions/receiveAllQuestionsAction\";\n\nimport LogIn from \"../../component/LogIn\";\nimport Navigation from \"../../component/Navigation\";\nimport Leaderbord from \"../../component/Leaderboard\";\nimport Poll from \"../../component/Poll\";\nimport PollResults from \"../../component/PollResults\";\nimport CreateQuestion from \"../../component/CreateQuestion\";\nimport CategorizedQuestions from \"../../component/CategorizedQuestions\";\nimport NoMatch404 from \"../../component/NoMatch404\";\n\nimport { getLoggedUserId, getLoggedUserAvatarUrl } from \"../../utils/utils\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.retreiveUsers();\n    this.props.retreiveQuestions();\n  }\n\n  render() {\n    const { users, logIn, userName, avatarUrl, userId } = this.props;\n\n    return (\n      <div>\n        <LoadingBar />\n\n        {logIn ? (\n          <Fragment>\n              <Navigation userName={userName} avatarUrl={avatarUrl} />\n            <Switch>\n              <Route exact path=\"/\">\n                <CategorizedQuestions />\n              </Route>\n              <Route path=\"/leaderbord\">\n                <Leaderbord users={users} />\n              </Route>\n              <Route path=\"/add\">\n                <CreateQuestion author={userId} />\n              </Route>\n              <Route path=\"/questions/:question_id\">\n                <Poll />\n              </Route>\n              <Route path=\"/pollresults/:question_id\">\n                <PollResults />\n              </Route>\n              <Route path=\"*\">\n                <NoMatch404 />\n              </Route>\n            </Switch>\n          </Fragment>\n        ) \n        : <LogIn users={users} />\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const users = Object.values(state.usersReducer.users);\n  const userName = state.usersReducer.loginField;\n\n  return {\n    users: state.usersReducer.users,\n    questions: state.questionsReducer.questions,\n    logIn: state.usersReducer.logIn,\n    userName: state.usersReducer.loginField,\n    avatarUrl: getLoggedUserAvatarUrl(users, userName),\n    userId: getLoggedUserId(users, userName),\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    retreiveUsers: () => dispatch(receiveUsersAction()),\n    retreiveQuestions: () => dispatch(receiveAllQuestionsAction()),\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./container/App/App\";\nimport \"./index.css\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}