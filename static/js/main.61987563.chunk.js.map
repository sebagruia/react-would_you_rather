{"version":3,"sources":["utils/images/logo.png","utils/avatars/tylermcginnis.png","utils/avatars/sarahedo.png","utils/avatars/johndoe.png","middleware/logger.js","DATA/_DATA.js","actions/receiveUsersAction.js","actions/saveAnswerAction.js","reducers/usersReducer.js","actions/setLoginUserAction.js","reducers/chooseLoginUserReducer.js","actions/receiveAllQuestionsAction.js","reducers/questionsReducer.js","actions/logAction.js","reducers/logReducer.js","component/LogIn.js","component/Navigation.js","component/UserStats.js","component/Leaderboard.js","component/Poll.js","component/PollResults.js","component/CreateQuestion.js","actions/addQuestionAction.js","component/Question.js","component/CategorizedQuestions.js","component/NoMatch404.js","container/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","logger","store","next","action","console","group","type","log","returnValue","getState","groupEnd","users","sarahedo","id","name","avatarURL","sarahAvatar","answers","questions","tylermcginnis","tylerAvatar","johndoe","johnAvatar","author","timestamp","optionOne","votes","text","optionTwo","_saveQuestion","question","Promise","res","rej","authedUser","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","setTimeout","concat","receiveUsersAction","dispatch","then","payload","saveAnswerAction","answerObject","qid","answer","_saveQuestionAnswer","initialStateUsers","setLoginUserAction","initialStateLogin","loginField","receiveAllQuestionsAction","initialQuestionState","logAction","boolean","initialLogState","logIn","LogIn","this","props","onLoginChange","onSubmitUser","Card","className","Title","Body","Img","variant","src","logo","Form","onSubmit","Control","onChange","as","defaultValue","Object","values","map","user","key","value","Button","block","Component","connect","state","usersReducer","chooseLoginReducer","logReducer","event","preventDefault","target","userName","avatarUrl","Navbar","bg","expand","Brand","width","height","alt","Toggle","aria-controls","Collapse","Nav","to","activeClassName","onClick","UserStats","numberOfQuestionsAnswered","keys","length","numberOfQuestionsCreated","score","Leaderbord","sortedUSers","sort","a","b","withRouter","location","useState","redirect","setRedirect","inputValue","setInputValue","handleInputChange","pathname","questionId","Check","label","userId","reRenderedQuestion","filter","renderedQuestion","questionOptionOneVotes","questionOptionTwoVotes","style","role","round","aria-valuenow","aria-valuemin","aria-valuemax","setOptionOneText","setOptionTwoText","Header","Group","controlId","placeholder","Question","answered","CategorizedQuestions","selectUser","answeredQuestions","includes","unansweredQuestions","defaultActiveKey","Item","exact","path","render","NoMatch404","useLocation","App","retreiveUsers","retreiveQuestions","component","questionsReducer","getAvatarrUrl","getUserId","Boolean","window","hostname","match","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.61987563.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2056c12c.png\";","module.exports = __webpack_public_path__ + \"static/media/tylermcginnis.8366a16c.png\";","module.exports = __webpack_public_path__ + \"static/media/sarahedo.b5af26a6.png\";","module.exports = __webpack_public_path__ + \"static/media/johndoe.50d048d7.png\";","\r\nconst logger = store=>next=>action=>{\r\n    console.group(action.type);\r\n        console.log('This action: ', action);\r\n        const returnValue = next(action);\r\n        console.log('The New STATE: ', store.getState())\r\n    console.groupEnd();\r\n    return returnValue;\r\n}\r\n\r\nexport default logger;","import tylerAvatar from \"../utils/avatars/tylermcginnis.png\";\nimport sarahAvatar from \"../utils/avatars/sarahedo.png\";\nimport johnAvatar from \"../utils/avatars/johndoe.png\";\n\nlet users = {\n  sarahedo: {\n    id: 'sarahedo',\n    name: 'Sarah Edo',\n    avatarURL:{name:sarahAvatar} ,\n    answers: {\n      \"8xf0y6ziyjabvozdd253nd\": 'optionOne',\n      \"6ni6ok3ym7mf1p33lnez\": 'optionTwo',\n      \"am8ehyc8byjqgar0jgpub9\": 'optionTwo',\n      \"loxhs1bqm25b708cmbf3g\": 'optionTwo'\n    },\n    questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9']\n  },\n  tylermcginnis: {\n    id: 'tylermcginnis',\n    name: 'Tyler McGinnis',\n    avatarURL:{name:tylerAvatar} ,\n    answers: {\n      \"vthrdm985a262al8qx3do\": 'optionOne',\n      \"xj352vofupe1dqz9emx13r\": 'optionTwo',\n    },\n    questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\n  },\n  johndoe: {\n    id: 'johndoe',\n    name: 'John Doe',\n    avatarURL:{name:johnAvatar},\n    answers: {\n      \"xj352vofupe1dqz9emx13r\": 'optionOne',\n      \"vthrdm985a262al8qx3do\": 'optionTwo',\n      \"6ni6ok3ym7mf1p33lnez\": 'optionTwo'\n    },\n    questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\n  }\n}\n\nlet questions = {\n  \"8xf0y6ziyjabvozdd253nd\": {\n    id: '8xf0y6ziyjabvozdd253nd',\n    author: 'sarahedo',\n    timestamp: 1467166872634,\n    optionOne: {\n      votes: ['sarahedo'],\n      text: 'have horrible short term memory',\n    },\n    optionTwo: {\n      votes: [],\n      text: 'have horrible long term memory'\n    }\n  },\n  \"6ni6ok3ym7mf1p33lnez\": {\n    id: '6ni6ok3ym7mf1p33lnez',\n    author: 'johndoe',\n    timestamp: 1468479767190,\n    optionOne: {\n      votes: [],\n      text: 'become a superhero',\n    },\n    optionTwo: {\n      votes: ['johndoe', 'sarahedo'],\n      text: 'become a supervillain'\n    }\n  },\n  \"am8ehyc8byjqgar0jgpub9\": {\n    id: 'am8ehyc8byjqgar0jgpub9',\n    author: 'sarahedo',\n    timestamp: 1488579767190,\n    optionOne: {\n      votes: [],\n      text: 'be telekinetic',\n    },\n    optionTwo: {\n      votes: ['sarahedo'],\n      text: 'be telepathic'\n    }\n  },\n  \"loxhs1bqm25b708cmbf3g\": {\n    id: 'loxhs1bqm25b708cmbf3g',\n    author: 'tylermcginnis',\n    timestamp: 1482579767190,\n    optionOne: {\n      votes: [],\n      text: 'be a front-end developer',\n    },\n    optionTwo: {\n      votes: ['sarahedo'],\n      text: 'be a back-end developer'\n    }\n  },\n  \"vthrdm985a262al8qx3do\": {\n    id: 'vthrdm985a262al8qx3do',\n    author: 'tylermcginnis',\n    timestamp: 1489579767190,\n    optionOne: {\n      votes: ['tylermcginnis'],\n      text: 'find $50 yourself',\n    },\n    optionTwo: {\n      votes: ['johndoe'],\n      text: 'have your best friend find $500'\n    }\n  },\n  \"xj352vofupe1dqz9emx13r\": {\n    id: 'xj352vofupe1dqz9emx13r',\n    author: 'johndoe',\n    timestamp: 1493579767190,\n    optionOne: {\n      votes: ['johndoe'],\n      text: 'write JavaScript',\n    },\n    optionTwo: {\n      votes: ['tylermcginnis'],\n      text: 'write Swift'\n    }\n  },\n}\n\nfunction generateUID () {\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\n}\n\nexport function _getUsers () {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({...users}), 1000)\n  })\n}\n\nexport function _getQuestions () {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({...questions}), 1000)\n  })\n}\n\nfunction formatQuestion ({ optionOneText, optionTwoText, author }) {\n  return {\n    id: generateUID(),\n    timestamp: Date.now(),\n    author,\n    optionOne: {\n      votes: [],\n      text: optionOneText,\n    },\n    optionTwo: {\n      votes: [],\n      text: optionTwoText,\n    }\n  }\n}\n\nexport function _saveQuestion (question) {\n  return new Promise((res, rej) => {\n    const authedUser = question.author;\n    const formattedQuestion = formatQuestion(question);\n\n    setTimeout(() => {\n      questions = {\n        ...questions,\n        [formattedQuestion.id]: formattedQuestion\n      }\n      \n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          questions: users[authedUser].questions.concat([formattedQuestion.id])\n        }\n      }\n\n      res(formattedQuestion)\n    }, 1000)\n  })\n}\n\nexport function _saveQuestionAnswer ({ authedUser, qid, answer }) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          answers: {\n            ...users[authedUser].answers,\n            [qid]: answer\n          }\n        }\n      }\n\n      questions = {\n        ...questions,\n        [qid]: {\n          ...questions[qid],\n          [answer]: {\n            ...questions[qid][answer],\n            votes: questions[qid][answer].votes.concat([authedUser])\n          }\n        }\n      }\n\n      res()\n    }, 500)\n  })\n}\n","import { _getUsers } from \"../DATA/_DATA\";\r\nexport const RECEIVE_USERS = \"RECEIVE_USERS\";\r\n\r\nexport const receiveUsersAction = () => dispatch => {\r\n  return _getUsers().then(users => {\r\n    dispatch({\r\n      type: RECEIVE_USERS,\r\n      payload:users\r\n    });\r\n  });\r\n};\r\n","import {_saveQuestionAnswer} from '../DATA/_DATA';\r\nexport const SAVE_ANSWER = \"SAVE_ANSWER\";\r\n\r\nexport const saveAnswerAction = (answerObject)=>(dispatch)=>{\r\n    _saveQuestionAnswer(answerObject)\r\n    .then(()=>{\r\n        dispatch({\r\n            type:SAVE_ANSWER,\r\n            payload:answerObject\r\n        });\r\n\r\n    });\r\n\r\n};","import { RECEIVE_USERS } from \"../actions/receiveUsersAction\";\r\nimport { ADD_QUESTION } from \"../actions/addQuestionAction\";\r\nimport { SAVE_ANSWER } from \"../actions/saveAnswerAction\";\r\n\r\nconst initialStateUsers = {\r\n  users: {},\r\n};\r\n\r\nexport const usersReducer = (state = initialStateUsers, action = {}) => {\r\n  \r\n  switch (action.type) {\r\n    case RECEIVE_USERS:\r\n      return { ...state, users: action.payload };\r\n    case ADD_QUESTION:\r\n      const formattedQuestion = action.payload;\r\n      return {\r\n        ...state,\r\n        users: {\r\n          ...state.users,\r\n          [formattedQuestion.author]: {\r\n            ...state.users[formattedQuestion.author],\r\n            questions: state.users[formattedQuestion.author].questions.concat([\r\n              formattedQuestion.id,\r\n            ]),\r\n          },\r\n        },\r\n      };\r\n    case SAVE_ANSWER:\r\n      const authedUser = action.payload.authedUser;\r\n      const qid = action.payload.qid;\r\n      return {\r\n        ...state,\r\n        users: {\r\n          ...state.users,\r\n          [authedUser]: {\r\n            ...state.users[authedUser],\r\n            answers: {\r\n              ...state.users[authedUser].answers,\r\n              [qid]: action.payload.answer,\r\n            },\r\n          },\r\n        },\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const SET_LOGIN_USER = 'SET_LOGIN_USER';\r\n\r\nexport const setLoginUserAction = text =>({\r\n    type:SET_LOGIN_USER,\r\n    payload:text\r\n});\r\n ","import { SET_LOGIN_USER } from '../actions/setLoginUserAction';\r\n\r\nconst initialStateLogin = {\r\n    loginField: ''\r\n}\r\n\r\nexport const chooseLoginReducer = (state = initialStateLogin, action = {}) => {\r\n    switch (action.type) {\r\n        case SET_LOGIN_USER:\r\n            return { ...state, loginField: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {_getQuestions} from '../DATA/_DATA';\r\nexport const RECEIVE_ALL_QUESTIONS = 'RECEIVE_ALL_QUESTIONS';\r\n\r\n\r\n\r\nexport const receiveAllQuestionsAction = ()=>(dispatch)=>{\r\n   return _getQuestions()\r\n   .then((questions)=>{\r\n        dispatch({\r\n            type:RECEIVE_ALL_QUESTIONS,\r\n            payload:questions\r\n        })\r\n   })\r\n\r\n}","import { RECEIVE_ALL_QUESTIONS } from \"../actions/receiveAllQuestionsAction\";\r\nimport { ADD_QUESTION } from \"../actions/addQuestionAction\";\r\nimport { SAVE_ANSWER } from \"../actions/saveAnswerAction\";\r\n\r\nconst initialQuestionState = {\r\n  questions: {},\r\n};\r\n\r\nexport const questionsReducer = (state = initialQuestionState, action = {}) => {\r\n  switch (action.type) {\r\n    case RECEIVE_ALL_QUESTIONS:\r\n      return { ...state, questions: action.payload };\r\n    case ADD_QUESTION:\r\n      return {\r\n        ...state,\r\n        questions: { ...state.questions, [action.payload.id]: action.payload },\r\n      };\r\n    case SAVE_ANSWER:\r\n      const qid = action.payload.qid;\r\n      const answer = action.payload.answer;\r\n      return {\r\n        ...state,\r\n        questions: {\r\n          ...state.questions,\r\n          [qid]: {\r\n            ...state.questions[qid],\r\n            [answer]: {\r\n              ...state.questions[qid][answer],\r\n              votes: state.questions[qid][answer].votes.concat([\r\n                action.payload.authedUser,\r\n              ]),\r\n            },\r\n          },\r\n        },\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const LOGED_IN_OR_OUT = \"LOGED_IN\";\r\n\r\nexport const logAction = boolean => {\r\n  return {\r\n    type: LOGED_IN_OR_OUT,\r\n    payload: boolean\r\n  };\r\n};\r\n","import { LOGED_IN_OR_OUT } from \"../actions/logAction\";\r\n\r\nconst initialLogState = {\r\n  logIn: false\r\n};\r\n\r\nexport const logReducer = (state = initialLogState, action = {}) => {\r\n  switch (action.type) {\r\n    case LOGED_IN_OR_OUT:\r\n      return { ...state, logIn: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport logo from'../utils/images/logo.png';\r\nimport { connect } from \"react-redux\";\r\nimport { setLoginUserAction } from \"../actions/setLoginUserAction\";\r\nimport { logAction } from \"../actions/logAction\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    users: state.usersReducer.users,\r\n    loginField: state.chooseLoginReducer.loginField,\r\n    logIn: state.logReducer.logIn\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onLoginChange: event => {\r\n      event.preventDefault();\r\n      if (event.target.value !== \"Select User\" && event.target.value !== \"\") {\r\n        dispatch(setLoginUserAction(event.target.value));\r\n      }\r\n    },\r\n    onSubmitUser: event => {\r\n      event.preventDefault();\r\n      dispatch(logAction(true));\r\n    }\r\n  };\r\n};\r\n\r\nclass LogIn extends Component {\r\n  render() {\r\n    const { users, onLoginChange, onSubmitUser, loginField } = this.props;\r\n\r\n    return (\r\n      <Card className=\"logIn-form m-auto\">\r\n        <Card.Title className=\"card-title\">\r\n          <h5>Welcome to the Would You Rather App!</h5>\r\n          <h6>Please log in to continue</h6>\r\n        </Card.Title>\r\n        <Card.Body>\r\n          <Card.Img\r\n            className=\"logo-img-container\"\r\n            variant=\"top\"\r\n            src={logo}\r\n          />\r\n          <Form\r\n            className=\"submit-form\"\r\n            onSubmit={\r\n              loginField !== \"Select User\" && loginField !== \"\"\r\n                ? onSubmitUser\r\n                : null\r\n            }\r\n          >\r\n            <Form.Control\r\n              className=\"select-user\"\r\n              onChange={onLoginChange}\r\n              as=\"select\"\r\n            >\r\n              <option defaultValue>Select User</option>\r\n              {Object.values(users).map(user => (\r\n                <option key={user.id} value={user.name}>\r\n                  {user.name}\r\n                </option>\r\n              ))}\r\n            </Form.Control>\r\n            <Button type=\"submit\" block variant=\"primary\">\r\n              Log In\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LogIn);\r\n","import React from \"react\";\r\nimport logo from \"../utils/images/logo.png\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport { connect } from \"react-redux\";\r\nimport { logAction } from \"../actions/logAction\";\r\nimport { setLoginUserAction } from \"../actions/setLoginUserAction\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navigation = props => {\r\n  const { userName, avatarUrl, dispatch } = props;\r\n\r\n  const onClick = () => {\r\n    dispatch(logAction(false));\r\n    dispatch(setLoginUserAction(\"\"));\r\n  };\r\n\r\n  return (\r\n    <Navbar bg=\"light\" expand=\"lg\">\r\n      <div className=\"container\">\r\n        <Navbar.Brand>\r\n          <img\r\n            src={logo}\r\n            className=\"d-inline-block align-top logo-image\"\r\n            width=\"30\"\r\n            height=\"30\"\r\n            alt=\"app logo\"\r\n          />\r\n          Would You Rather?\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"ml-auto\">\r\n            <NavLink to=\"/questions/unanswered-questions\" activeClassName=\"selected\">\r\n              <i className=\"fas fa-home\"></i>\r\n              Home\r\n            </NavLink>\r\n            <NavLink to=\"/leaderbord\" activeClassName=\"selected\">\r\n              <i className=\"fas fa-medal\"></i>\r\n              Leaderboard\r\n            </NavLink>\r\n            <NavLink to=\"/add-question\" activeClassName=\"selected\">\r\n              <i className=\"fas fa-plus-circle\"></i>\r\n              Add question\r\n            </NavLink>\r\n            <NavLink  to=\"/questions/unanswered-questions\">\r\n              <div className=\"nav-link-img-container\">\r\n              <img className=\"user-avatar\" src={avatarUrl} alt=\"user avatar\" />\r\n             <p>Hello, {userName}</p> \r\n              </div>\r\n            </NavLink>\r\n            <NavLink to=\"/login\" onClick={onClick}>\r\n              <i className=\"fas fa-minus-circle\"></i>\r\n              LogOut\r\n            </NavLink>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </div>\r\n    </Navbar>\r\n    \r\n    \r\n  );\r\n};\r\n\r\nexport default connect()(Navigation);\r\n","import React from \"react\";\r\n\r\nconst UserStats = ({user}) => {\r\n    const numberOfQuestionsAnswered = Object.keys(user.answers).length;\r\n    const numberOfQuestionsCreated = Object.keys(user.questions).length;\r\n    const score = numberOfQuestionsAnswered + numberOfQuestionsCreated;\r\n    \r\n  return (\r\n    <div className=\"userStats-container\">\r\n      <div className=\"userStats-avatar\">\r\n        <img src={user.avatarURL.name} alt=\"avatar\" />\r\n      </div>\r\n      <div className=\"userStats-statistic\">\r\n        <div className=\"userStats-statistic-text\">\r\n          <h5>{user.name}</h5>\r\n          <div className=\"answered-questions\">\r\n            <div>\r\n              <h6>Answered questions</h6>\r\n            </div>\r\n            <div>\r\n              <h6>{numberOfQuestionsAnswered}</h6>\r\n            </div>\r\n          </div>\r\n          <div className=\"created-questions\">\r\n            <div>\r\n              <h6>Created questions</h6>\r\n            </div>\r\n            <div>\r\n              <h6>{numberOfQuestionsCreated}</h6>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"userStats-score\">\r\n        <div className=\"userStats-score-text\">\r\n          <h6>Score</h6>\r\n        </div>\r\n        <div className=\"userStats-score-number\">\r\n          <p>{score}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserStats;\r\n","import React from \"react\";\r\nimport UserStats from \"../component/UserStats\";\r\n\r\nconst Leaderbord = props => {\r\n  const { users } = props;\r\n  // The user array is sorted according to the SUM of \"answered questions+created questions\" in the descending order\r\n  const sortedUSers = Object.values(users).sort((a,b)=>{\r\n    return (Object.keys(b.answers).length + b.questions.length) -  (Object.keys(a.answers).length + a.questions.length); \r\n  });\r\n  return (\r\n    <div className=\"leaderboard\">\r\n      {sortedUSers.map(user => {\r\n        return <UserStats key={user.id} user={user} />\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Leaderbord;\r\n","import React, { useState,Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { saveAnswerAction } from \"../actions/saveAnswerAction\";\r\nimport {receiveAllQuestionsAction} from \"../actions/receiveAllQuestionsAction\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { withRouter, Redirect } from \"react-router-dom\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\n\r\nconst Poll = (props) => {\r\n  \r\n  //props.location.state represents the props passed via Redirect (react-router-dom) from the Question project component\r\n  const { userName, avatarUrl, question } = props.location.state;\r\n  const {authedUser, dispatch} = props;\r\n\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n \r\n\r\n  const redirectToPollResults = (event) => {\r\n    event.preventDefault();\r\n    if (inputValue) {\r\n      setRedirect(true);\r\n      dispatch(saveAnswerAction({authedUser, qid:question.id, answer:inputValue}));\r\n      dispatch(receiveAllQuestionsAction());\r\n    }\r\n\r\n   \r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setInputValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {redirect ? (\r\n        <Redirect\r\n          to={{\r\n            pathname: `/pollresults/:${question.id}`,\r\n            state: {\r\n              userName: userName,\r\n              avatarUrl: avatarUrl,\r\n              question:question,\r\n              questionId: question.id\r\n            },\r\n          }}\r\n        />\r\n      ) : (\r\n        <div className=\"user poll\">\r\n          <div className=\"user-name\">\r\n            <h5>{userName} asks:</h5>\r\n          </div>\r\n          <div className=\"user-info-container-poll\">\r\n            <div className=\"image-container poll-image-container align-middle\">\r\n              <img src={avatarUrl} alt=\"avatar\" />\r\n            </div>\r\n\r\n            <Form\r\n              onSubmit={redirectToPollResults}\r\n              className=\"question-container\"\r\n            >\r\n              <h5>Would you rather...</h5>\r\n              <div className=\"poll-first-question-container\">\r\n                <div className=\"input-container\">\r\n                  <Form.Check\r\n                    onChange={handleInputChange}\r\n                    type=\"radio\"\r\n                    label={question.optionOne.text}\r\n                    name=\"selection\"\r\n                    id=\"first-question-checkbox\"\r\n                    value=\"optionOne\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"poll-second-question-container\">\r\n                <div className=\"input-container\">\r\n                  <Form.Check\r\n                    onChange={handleInputChange}\r\n                    type=\"radio\"\r\n                    label={question.optionTwo.text}\r\n                    name=\"selection\"\r\n                    id=\"second-question-checkbox\"\r\n                    value=\"optionTwo\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"outline-info\"\r\n                className=\"view-poll-button btn-block\"\r\n              >\r\n                Vote\r\n              </Button>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(connect()(Poll)); //withRouter component from react-router-dom lets you acces the props passed via the Redirect component\r\n","import React, { useState, Fragment } from \"react\";\r\nimport {Redirect, withRouter } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst PollResults = (props) => {\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  const { userName, avatarUrl, question } = props.location.state;\r\n  const{users, userId, questions} = props;\r\n\r\n  const reRenderedQuestion = Object.values(questions).filter(renderedQuestion=>renderedQuestion.id===question.id);\r\n  \r\n  const questionOptionOneVotes = reRenderedQuestion[0].optionOne.votes.length;\r\n  const questionOptionTwoVotes = reRenderedQuestion[0].optionTwo.votes.length;\r\n\r\n  const answer = users[userId].answers[question.id];\r\n  \r\n\r\n  const handleOnClick = () => {\r\n    setRedirect(true);\r\n  };\r\n\r\n  \r\n  return (\r\n    <Fragment>\r\n      {\r\n        redirect ? <Redirect to=\"/questions/unanswered-questions\"/>\r\n        :\r\n        <div className=\"user poll\">\r\n        <div className=\"user-name\">\r\n          <h5>Asked by {userName}</h5>\r\n        </div>\r\n        <div className=\"pollresults-container-poll\">\r\n          <div className=\"pollresults-image-container\">\r\n            <img src={avatarUrl} alt=\"avatar\" />\r\n          </div>\r\n          <div className=\"pollresults\">\r\n            <h5 className=\"pollresults-title\">Results:</h5>\r\n            <div className={`pollresults-container ${answer==='optionOne' ? 'select' : null}`}>\r\n              <div className=\"pollresults-question\">\r\n                <h6>{`${question.optionOne.text}?`}</h6>\r\n                <h6 className={`voted-container ${answer==='optionOne' ? \"\" : \"hidden\"}`}><span className=\"badge badge-warning voted\">Voted</span></h6>\r\n              </div>\r\n              <div className=\"progress\" style={{ height: \"20px\" }}>\r\n                <div\r\n                  className=\"progress-bar\"\r\n                  role=\"progressbar\"\r\n                  style={{\r\n                    width: `${Math.round((questionOptionOneVotes /(questionOptionOneVotes + questionOptionTwoVotes)) *100)}%`}}\r\n                  aria-valuenow=\"25\"\r\n                  aria-valuemin=\"0\"\r\n                  aria-valuemax=\"100\"\r\n                >\r\n                  {Math.round((questionOptionOneVotes / (questionOptionOneVotes + questionOptionTwoVotes)) *100)}%\r\n                </div>\r\n              </div>\r\n              <div className=\"votes\">\r\n                <h6>{`${questionOptionOneVotes} out of ${questionOptionOneVotes + questionOptionTwoVotes} votes`}</h6>\r\n              </div>\r\n            </div>\r\n\r\n            <div className={`pollresults-container ${answer==='optionTwo' ? 'select' : null}`}>\r\n              <div className=\"pollresults-question\">\r\n                <h6>{`${question.optionTwo.text}?`}</h6>\r\n                <h6 className={`voted-container ${answer==='optionTwo' ? \"\" : \"hidden\"}`}><span className=\"badge badge-warning voted\">Voted</span></h6>\r\n              </div>\r\n              <div className=\"progress\" style={{ height: \"20px\" }}>\r\n                <div\r\n                  className=\"progress-bar\"\r\n                  role=\"progressbar\"\r\n                  style={{ width: `${Math.round((questionOptionTwoVotes / (questionOptionOneVotes + questionOptionTwoVotes)) *100)}%`}}\r\n                  aria-valuenow=\"35\"\r\n                  aria-valuemin=\"0\"\r\n                  aria-valuemax=\"100\"\r\n                >\r\n                  {Math.round((questionOptionTwoVotes /(questionOptionOneVotes + questionOptionTwoVotes)) *100)}%\r\n                </div>\r\n              </div>\r\n              <div className=\"votes\">\r\n                <h6>{`${questionOptionTwoVotes} out of ${questionOptionOneVotes + questionOptionTwoVotes} votes`}</h6>\r\n              </div>\r\n            </div>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"outline-info\"\r\n              className=\"view-poll-button btn-block\"\r\n              onClick = {handleOnClick}\r\n            >\r\n              Back\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      }\r\n      \r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(PollResults);\r\n","import React from \"react\";\r\nimport { Fragment, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addQuestion } from \"../actions/addQuestionAction\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst CreateQuestion = props => {\r\n  const { dispatch, userId } = props;\r\n  const author = userId;\r\n\r\n  const [optionOneText, setOptionOneText] = useState(\"\");\r\n  const [optionTwoText, setOptionTwoText] = useState(\"\");\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  const getOptionOneText = text => {\r\n    setOptionOneText(text);\r\n  };\r\n  const getOptionTwoText = text => {\r\n    setOptionTwoText(text);\r\n  };\r\n\r\n  const redirectForm = () => {\r\n    setRedirect(true);\r\n  };\r\n\r\n  const onSubmitNewQuestion = event => {\r\n    event.preventDefault();\r\n    if (optionOneText !== \"\" && optionTwoText !== \"\") {\r\n      dispatch(addQuestion({ optionOneText, optionTwoText, author }));\r\n      redirectForm();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {redirect ? (\r\n        <Redirect to=\"/questions\" />\r\n      ) : (\r\n        <Card className=\"createQuestion\">\r\n          <Card.Header>\r\n            <h3>Add a New Question</h3>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form\r\n              onSubmit={onSubmitNewQuestion}\r\n              className=\"submit-form createQuestion-form\"\r\n            >\r\n              <h6>Complete the question</h6>\r\n              <h5>Would you rather...</h5>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Control\r\n                  onChange={event => getOptionOneText(event.target.value)}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Question One Here\"\r\n                />\r\n              </Form.Group>\r\n              <hr></hr>\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Control\r\n                  onChange={event => getOptionTwoText(event.target.value)}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Question Two One Here\"\r\n                />\r\n              </Form.Group>\r\n              <Button type=\"submit\" block variant=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default connect()(CreateQuestion);\r\n","import  {_saveQuestion} from  '../DATA/_DATA';\r\nexport const ADD_QUESTION = \"ADD_QUESTION\";\r\n\r\n\r\nexport const addQuestion = (question)=>(dispatch)=>{\r\n    return _saveQuestion(question)\r\n    .then((formattedQuestion)=>{\r\n        dispatch({\r\n            type:ADD_QUESTION,\r\n            payload:formattedQuestion\r\n        })\r\n    })\r\n\r\n}","import React, { useState, Fragment } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst Question = (props) => {\r\n  const { userName, avatarUrl, question, answered } = props;\r\n  const [redirect, setRedirect] = useState(false);\r\n  const redirectToPoll = (event) => {\r\n    event.preventDefault();\r\n    setRedirect(true);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      {redirect && !answered ? (\r\n        <Redirect\r\n          to={{\r\n            pathname: `/poll/:${question.id}`,\r\n            state: {\r\n              userName: userName,\r\n              avatarUrl: avatarUrl,\r\n              question: question,\r\n              questionId: question.id,\r\n            },\r\n          }}\r\n        />\r\n      ) : redirect && answered ? (\r\n        <Redirect\r\n          to={{\r\n            pathname: `/pollresults/:${question.id}`,\r\n            state: {\r\n              userName: userName,\r\n              avatarUrl: avatarUrl,\r\n              question: question,\r\n              questionId: question.id,\r\n            },\r\n          }}\r\n        />\r\n      ) : (\r\n        <div className=\"user\">\r\n          <div className=\"user-name\">\r\n            <h5>{userName} asks:</h5>\r\n          </div>\r\n\r\n          <div className=\"user-info-container\">\r\n            <div className=\"image-container align-middle\">\r\n              <img src={avatarUrl} alt=\"avatar\" />\r\n            </div>\r\n            <div className=\"question-container\">\r\n              <h5>Would you rather</h5>\r\n              <p>{question.optionOne.text}</p>\r\n              <Button\r\n                onClick={redirectToPoll}\r\n                variant=\"outline-info\"\r\n                className=\"view-poll-button btn-block\"\r\n              >\r\n                {answered ? \"View Poll\" : \"Submit\"}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport { Route, NavLink } from \"react-router-dom\";\r\nimport Question from \"../component/Question\";\r\n\r\n\r\nconst CategorizedQuestions = props => {\r\n  const { users, questions, userName } = props;\r\n  const selectUser = Object.values(users).filter(\r\n    (user) => user.name === userName\r\n  );\r\n\r\n  \r\n  const answeredQuestions = Object.values(questions).filter(\r\n    question =>\r\n      question.optionOne.votes.includes(selectUser[0].id) ||\r\n      question.optionTwo.votes.includes(selectUser[0].id)\r\n  ).sort((a,b)=>{\r\n    return b.timestamp - a.timestamp;\r\n  });\r\n  const unansweredQuestions = Object.values(questions).filter(\r\n    question =>\r\n      !question.optionOne.votes.includes(selectUser[0].id) &&\r\n      !question.optionTwo.votes.includes(selectUser[0].id)\r\n  ).sort((a,b)=>{\r\n    return b.timestamp - a.timestamp;\r\n  });\r\n  return (\r\n    <Card className=\"home\">\r\n      <Card.Header>\r\n        <Nav\r\n          variant=\"tabs\"\r\n          defaultActiveKey=\"#first\"\r\n          className=\"home-links-container\"\r\n        >\r\n          <Nav.Item>\r\n            <NavLink\r\n              to=\"/questions/unanswered-questions\"\r\n              className=\"nav-link\"\r\n              activeClassName=\"active\"\r\n            >\r\n              Unanswered Questions\r\n            </NavLink>\r\n          </Nav.Item>\r\n\r\n          <Nav.Item>\r\n            <NavLink\r\n              to=\"/questions/answered-questions\"\r\n              className=\"nav-link\"\r\n              activeClassName=\"active\"\r\n            >\r\n              Answered Questions\r\n            </NavLink>\r\n          </Nav.Item>\r\n        </Nav>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Route\r\n          exact\r\n          path=\"/questions/unanswered-questions\"\r\n          render={() => {\r\n            return Object.values(users).map(user => {\r\n              return unansweredQuestions.map(question => {\r\n                return user.id === question.author ? (\r\n                  <Question\r\n                    key={question.id}\r\n                    userName={user.name}\r\n                    avatarUrl={user.avatarURL.name}\r\n                    question={question}\r\n                  />\r\n                ) : null;\r\n              });\r\n            });\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/questions/answered-questions\"\r\n          render={() => {\r\n            return Object.values(users).map(user => {\r\n              return answeredQuestions.map(question => {\r\n                return user.id === question.author ? (\r\n                  <Question\r\n                    key={question.id}\r\n                    userName={user.name}\r\n                    avatarUrl={user.avatarURL.name}\r\n                    question={question}\r\n                    answered={true}\r\n                  />\r\n                ) : null;\r\n              });\r\n            });\r\n          }}\r\n        />\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\nexport default CategorizedQuestions;\r\n","import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst NoMatch404 = () => {\r\n  let location = useLocation();\r\n  return (\r\n    <div>\r\n      <h3>\r\n        No Match for <code>{location.pathname}</code>\r\n      </h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoMatch404;\r\n","import React, { Component, Fragment } from \"react\";\nimport \"./App.css\";\nimport { Route, Redirect, Switch, withRouter } from \"react-router-dom\";\nimport LogIn from \"../../component/LogIn\";\nimport Navigation from \"../../component/Navigation\";\nimport Leaderbord from \"../../component/Leaderboard\";\nimport Poll from \"../../component/Poll\";\nimport PollResults from \"../../component/PollResults\";\nimport CreateQuestion from \"../../component/CreateQuestion\";\nimport CategorizedQuestions from \"../../component/CategorizedQuestions\";\nimport NoMatch404 from \"../../component/NoMatch404\";\nimport { connect } from \"react-redux\";\nimport { receiveUsersAction } from \"../../actions/receiveUsersAction\";\nimport { receiveAllQuestionsAction } from \"../../actions/receiveAllQuestionsAction\";\n\nconst mapStateToProps = (state) => {\n  const users = Object.values(state.usersReducer.users);\n  const userName = state.chooseLoginReducer.loginField;\n  const getAvatarrUrl = () => {\n    for (let user of users) {\n      if (user.name === userName) {\n        return user.avatarURL.name;\n      }\n    }\n  };\n  const getUserId = () => {\n    for (let user of users) {\n      if (user.name === userName) {\n        return user.id;\n      }\n    }\n  };\n\n  return {\n    users: state.usersReducer.users,\n    questions: state.questionsReducer.questions,\n    logIn: state.logReducer.logIn,\n    userName: state.chooseLoginReducer.loginField,\n    avatarUrl: getAvatarrUrl(),\n    userId: getUserId(),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    retreiveUsers: () => dispatch(receiveUsersAction()),\n    retreiveQuestions: () => dispatch(receiveAllQuestionsAction()),\n  };\n};\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.retreiveUsers();\n    this.props.retreiveQuestions();\n  }\n\n  render() {\n    \n    const {\n      users,\n      logIn,\n      userName,\n      questions,\n      avatarUrl,\n      userId,\n      location\n    } = this.props;\n    return (\n      <div>\n        <Route exact path=\"/react-would_you_rather\">\n          {!logIn ? <Redirect to=\"/login\" /> : null}\n        </Route>\n        <Route exact path=\"/login\" component={LogIn} />\n\n        {logIn ? (\n          <Fragment>\n            <Route path=\"/\">\n              <Navigation userName={userName} avatarUrl={avatarUrl} />\n            </Route>\n            <Redirect to=\"/questions\" />\n            <Switch>\n              <Route path=\"/questions\">\n                <Redirect to=\"/questions/unanswered-questions\" />\n                <CategorizedQuestions\n                  users={users}\n                  userName={userName}\n                  questions={questions}\n                />\n              </Route>\n              <Route exact path=\"/leaderbord\">\n                <Leaderbord users={users} />\n              </Route>\n              <Route exact path=\"/add-question\">\n                <CreateQuestion userId={userId} />\n              </Route>\n              <Route exact path={`/poll/:${location.state ? location.state.questionId :null}`}>\n                <Poll authedUser = {userId} />\n              </Route>\n              <Route exact path={`/pollresults/:${location.state ? location.state.questionId :null}`}>\n                <PollResults users={users} userId={userId} questions={questions}/>\n              </Route>\n              <Route path=\"*\">\n            <NoMatch404 />\n          </Route>\n            </Switch>\n          </Fragment>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter} from \"react-router-dom\";\nimport thunkMiddleware from \"redux-thunk\";\nimport logger from \"./middleware/logger\";\nimport { usersReducer } from \"./reducers/usersReducer\";\nimport { chooseLoginReducer } from \"./reducers/chooseLoginUserReducer\";\nimport { questionsReducer } from \"./reducers/questionsReducer\";\nimport { logReducer } from \"./reducers/logReducer\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./container/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst rootReducer = combineReducers({\n  usersReducer,\n  chooseLoginReducer,\n  questionsReducer,\n  logReducer\n});\n//The code below is just for enabling Chrome Redux DEvTools=============\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n//The \"store\" const bellow has the composeEnhancers function as paramter because I wanted to use Chrome Redux DEvTools, the app works without it just fine\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunkMiddleware, logger))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter >\n        <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}